# Docker Compose for GraphRAG Development

# Runs Graphiti service + Neo4j database

version: '3.8'

services:

# Graphiti REST API Service

  graphiti:
    image: zepai/graphiti:latest
    container_name: graphiti-service
    ports:
      - "8001:8000"  # Changed to 8001 to avoid conflict with Next.js dev server
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - graphrag-network
    restart: unless-stopped

# Neo4j Graph Database

  neo4j:
    image: neo4j:5.22.0
    container_name: neo4j-graphrag
    ports:
      - "7474:7474"  # HTTP - Neo4j Browser UI
      - "7687:7687"  # Bolt - Database protocol
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    environment:
      - NEO4J_AUTH=${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
    networks:
      - graphrag-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "${NEO4J_USER:-neo4j}", "-p", "${NEO4J_PASSWORD}", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

networks:
  graphrag-network:
    driver: bridge

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
